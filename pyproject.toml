[ project ] # Required

name = "Annau-2022"  # Required

version = "1.0.0"  # Required

description = "Reproduce figures and analysis in Annau-2022 DOI: ..."  # Optional

readme = "README.md" # Optional

requires-python = ">=3.7"

license = {file = "LICENSE.txt"}

keywords = ["science", "climate", "deep learning", "pytorch", "GAN", "super-resolution", "downscaling"]  # Optional

authors = [
  {name = "Nic Annau", email = "nicannau@gmail.com" } # Optional
]

maintainers = [
  {name = "Nic Annau", email = "nicannau@gmail.com" } # Optional
]

# Classifiers help users find your project by categorizing it.
#
# For a list of valid classifiers, see https://pypi.org/classifiers/
classifiers = [  
  "Development Status :: 3 - Alpha",
  "Intended Audience :: Scientists, Researchers, Students",
  "Topic :: Statistical Downscaling :: Deep Learning",
  "License :: GPL-3.0 License",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.7",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3 :: Only",
]

dependencies = [ # Optional: 
# Leave empty until I get a better handle on what I need. In the meantime, I'll use requirements.txt
]

# # List additional groups of dependencies here (e.g. development
# # dependencies). Users will be able to install these using the "extras"
# # syntax, for example:
# #
# #   $ pip install sampleproject[dev]
# #
# # Similar to `dependencies` above, these must be valid existing
# # projects.
# [project.optional-dependencies] # Optional
# dev = ["check-manifest"]
# test = ["coverage"]

# List URLs that are relevant to your project
#
# This field corresponds to the "Project-URL" and "Home-Page" metadata fields:
# https://packaging.python.org/specifications/core-metadata/#project-url-multiple-use
# https://packaging.python.org/specifications/core-metadata/#home-page-optional
#
# Examples listed include a pattern for specifying where the package tracks
# issues, where the source is hosted, where to say thanks to the package
# maintainers, and where to support the project financially. The key is
# what's used to render the link text on PyPI.
[project.urls]  # Optional
"Homepage" = "https://github.com/pypa/sampleproject"
"Bug Reports" = "https://github.com/pypa/sampleproject/issues"
"Say Thanks!" = "http://saythanks.io/to/example"
"Source" = "https://github.com/pypa/sampleproject/"

# The following would provide a command line executable called `sample`
# which executes the function `main` from this package when invoked.
# [project.scripts]  # Optional
# sample = "sample:main"

# This is configuration specific to the `setuptools` build backend.
# If you are using a different build backend, you will need to change this.
[tool.setuptools]
# If there are data files included in your packages that need to be
# installed, specify them here.
package-data = {"sample" = ["*.dat"]}

[build-system]
# These are the assumed default build requirements from pip:
# https://pip.pypa.io/en/stable/reference/pip/#pep-517-and-518-support
requires = ["setuptools>=43.0.0", "wheel"]
build-backend = "setuptools.build_meta"